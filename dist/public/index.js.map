{"version":3,"file":"index.js","mappings":";;;;;;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,+BAA+B;AAC3H,uFAAuF,sDAAsD;AAC7I,wFAAwF,uDAAuD;AAC/I,oFAAoF,uCAAuC;AAC3H,GAAG","sources":["webpack:///./public/index.js"],"sourcesContent":["\n\n\n\n/// react on Identity changed. (login, logout, etc..)\nasync function IdentityChanged() {\n\n    console.log(\"In method IdentityChanged\");\n    let walletInfo = CommonIdentityProvider.WalletsProvider;\n    let labelInfo = document.getElementById(\"labelWalletConnectionStatus\");\n  \n    let usersIdentity = walletInfo.UsersIdentity;\n    if (usersIdentity.IsConnected == false) {\n      labelInfo.innerHTML = \"Status: Not connected to a wallet\"\n    }\n    else {\n      labelInfo.innerHTML = \"Status: connected to \" + usersIdentity.Name + \"</br>\" + usersIdentity.AccountPrincipalText;\n    }     \n  }\n\n\n/* When the user clicks on the button,\ntoggle between hiding and showing the dropdown content of button 'Wallet Connection' */\nfunction OnToggleWalletDropDownMenu() {\n    document.getElementById(\"dropDownWalletMenu\").classList.toggle(\"show\");\n  }\n  \n  //Close the dropdown menu if the user clicks outside of it\n  window.onclick = function (event) {\n    if (!event.target.matches('.dropbtn')) {\n      var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n      var i;\n      for (i = 0; i < dropdowns.length; i++) {\n        var openDropdown = dropdowns[i];\n        if (openDropdown.classList.contains('show')) {\n          openDropdown.classList.remove('show');\n        }\n      }\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', async function () {\n\n\n    PubSub.subscribe('index_js_UserIdentityChanged', 'UserIdentityChanged', IdentityChanged);\n    await CommonIdentityProvider.Init();\n  \n    DynamicPageContentLoad(pageIds.mainContentPageId, pageIdValues.PageStartPage);\n  \n    DynamicPageContentLoad_InitHandlers(pageIds.mainContentPageId);\n  \n  \n    document.getElementById(\"buttonWalletDropDown\").addEventListener('click', function () { OnToggleWalletDropDownMenu(); }, false);\n    document.getElementById(\"loginPlug\").addEventListener('click', async function () { await CommonIdentityProvider.Login(WalletTypes.plug) }, false);\n    document.getElementById(\"loginStoic\").addEventListener('click', async function () { await CommonIdentityProvider.Login(WalletTypes.stoic) }, false);\n    document.getElementById(\"logout\").addEventListener('click', async function () { await CommonIdentityProvider.Logout() }, false);\n  }, false)\n\n\n\n"],"names":[],"sourceRoot":""}